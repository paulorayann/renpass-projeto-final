{
    "openapi": "3.0.0",
    "info": {
        "title": "Renpass.UOL",
        "description": "Renpass.UOL API documentation",
        "contact": {
            "name": "Paulo Rayann",
            "url": "https://github.com/paulorayann",
            "email": "paulorpsena@gmail.com"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:3000/api/v1",
            "description": "Renpass.UOL API"
        },
        {
            "url": "renpassuol-paulo.herokuapp.com/api/v1/api-docs",
            "description": "Renpass.UOL Heroku"
        }
    ],
    "paths": {
        "/authenticate": {
            "post": {
                "summary": "Authenticate User",
                "description": "This route will be used to authenticate a user",
                "tags": [
                    "Authentication"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Person"
                            },
                            "examples": {
                                "Person": {
                                    "value": {
                                        "email": "paulorayann@email.com",
                                        "password": "123456789"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Bad Request"
                    },
                    "201": {
                        "description": "User Authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "$ref": "#/components/schemas/Person"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/car": {
            "post": {
                "summary": "Post a car",
                "description": "This route will be responsible for creating a new car",
                "tags": [
                    "Cars"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "$ref": "#/components/schemas/Car"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Bad Request"
                    },
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "$ref": "#/components/schemas/Car"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "Get all cars",
                "description": "This route will be responsible for listing all cars",
                "tags": [
                    "Cars"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "model",
                        "in": "query",
                        "description": "Filter by model",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Filter by type",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "brand",
                        "in": "query",
                        "description": "Filter by brand",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "color",
                        "in": "query",
                        "description": "Filter by color",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "description": "Filter by year",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "passengersQtd",
                        "in": "query",
                        "description": "Filter by passengersQtd",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit the number of results",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset the results",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Bad Request"
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Car"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/car/{id}": {
            "get": {
                "summary": "Get car by Id",
                "description": "This route will be responsible for listing a car by Id",
                "tags": [
                    "Cars"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Filter by id",
                        "required": true
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not Found"
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Car"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Update car by Id",
                "description": "This route will be responsible for updating a car by Id",
                "tags": [
                    "Cars"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the car",
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "model": {
                                        "type": "string",
                                        "example": "Celta"
                                    },
                                    "type": {
                                        "type": "string",
                                        "example": "Hatch"
                                    },
                                    "brand": {
                                        "type": "string",
                                        "example": "Chevrolet"
                                    },
                                    "color": {
                                        "type": "string",
                                        "example": "Azul"
                                    },
                                    "year": {
                                        "type": "string",
                                        "example": "2012"
                                    },
                                    "passengersQtd": {
                                        "type": "number",
                                        "example": 5
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "404": {
                        "description": "Not Found"
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Car"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete car by Id",
                "description": "This route will be responsible for deleting a car by Id",
                "tags": [
                    "Cars"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Delete by id",
                        "required": true
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not Found"
                    },
                    "204": {
                        "description": "No Content",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Car"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/car/{id}/accessories/{accessoryId}": {
            "patch": {
                "summary": "Update an accessory to car by Id",
                "description": "This route will be responsible for updating an accessory to car by Id",
                "tags": [
                    "Cars"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the car",
                        "required": true
                    },
                    {
                        "name": "accessoryId",
                        "in": "path",
                        "description": "Id of the accessory",
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Car"
                            },
                            "examples": {
                                "car": {
                                    "value": {
                                        "description": "Motor 1.4"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Car"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/person/": {
            "post": {
                "summary": "Create person",
                "description": "This route will be responsible for creating a person",
                "tags": [
                    "Person"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Person"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Bad Request"
                    },
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "$ref": "#/components/schemas/Person"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "Get all Person",
                "description": "This route will be responsible for listing person",
                "tags": [
                    "Person"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Filter by name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cpf",
                        "in": "query",
                        "description": "Filter by cpf",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "birthday",
                        "in": "query",
                        "description": "Filter by birthday",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "Filter by email",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "Filter by password",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "canDrive",
                        "in": "query",
                        "description": "Filter by canDrive",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Bad Request"
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Person"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/person/{id}": {
            "get": {
                "summary": "Get Person by Id",
                "description": "This route will be responsible for listing a Person by Id",
                "tags": [
                    "Person"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Filter by id",
                        "required": true
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not Found"
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Person"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Update Person by Id",
                "description": "This route will be responsible for updating a Person by Id",
                "tags": [
                    "Person"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the Person",
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Xuxa"
                                    },
                                    "cpf": {
                                        "type": "string",
                                        "example": "236.006.660-96"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "xuxameneghel@email.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "14435567"
                                    },
                                    "canDrive": {
                                        "type": "number",
                                        "example": "yes"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "404": {
                        "description": "Not Found"
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Person"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete Person by Id",
                "description": "This route will be responsible for deleting a Person by Id",
                "tags": [
                    "Person"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Delete by id",
                        "required": true
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not Found"
                    },
                    "204": {
                        "description": "No Content",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Person"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/rental/": {
            "post": {
                "summary": "Create Rental",
                "description": "This route will be responsible for creating a Rental",
                "tags": [
                    "Rental"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Rental"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Bad Request"
                    },
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "$ref": "#/components/schemas/Rental"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "Get all Rentals",
                "description": "This route will be responsible for listing Rentals",
                "tags": [
                    "Rental"
                ],
                "parameters": [
                    {
                        "name": "cep",
                        "in": "query",
                        "description": "Filter by cep",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "number",
                        "in": "query",
                        "description": "Filter by cpf",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "isFilial",
                        "in": "query",
                        "description": "Filter by isFilial",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "complement",
                        "in": "query",
                        "description": "Filter by complement",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "street",
                        "in": "query",
                        "description": "Filter by street",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "district",
                        "in": "query",
                        "description": "Filter by district",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "city",
                        "in": "query",
                        "description": "Filter by city",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "description": "Filter by state",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Bad Request"
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Rental"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/rental/{id}": {
            "get": {
                "summary": "Get Rental by Id",
                "description": "This route will be responsible for listing a Rental by Id",
                "tags": [
                    "Rental"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Filter by id",
                        "required": true
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not Found"
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Rental"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Update Rental by Id",
                "description": "This route will be responsible for updating a Rental by Id",
                "tags": [
                    "Rental"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the Rental",
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Nome genérico"
                                    },
                                    "cnpj": {
                                        "type": "string",
                                        "example": "11.145.530/0001-44"
                                    },
                                    "activities": {
                                        "type": "string",
                                        "example": "Aluguel e venda de carros"
                                    },
                                    "address": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "cep": {
                                                    "type": "string",
                                                    "example": "66640-677"
                                                },
                                                "number": {
                                                    "type": "string",
                                                    "example": "120"
                                                },
                                                "isFilial": {
                                                    "type": "boolean",
                                                    "example": true
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "404": {
                        "description": "Not Found"
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Rental"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete Rental by Id",
                "description": "This route will be responsible for deleting a Rental by Id",
                "tags": [
                    "Rental"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Delete by id",
                        "required": true
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not Found"
                    },
                    "204": {
                        "description": "No Content",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Rental"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/rental/{rentalId}/fleet": {
            "parameters": [
                {
                    "name": "rentalId",
                    "in": "path",
                    "description": "Id of the Rental",
                    "required": true
                }
            ],
            "post": {
                "summary": "Create Fleet",
                "description": "This route will be responsible for creating a Fleet",
                "tags": [
                    "Fleet"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fleet"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Bad Request"
                    },
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "$ref": "#/components/schemas/Fleet"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "Get all Fleets",
                "description": "This route will be responsible for listing Fleets",
                "tags": [
                    "Fleet"
                ],
                "parameters": [
                    {
                        "name": "id_car",
                        "in": "query",
                        "description": "Filter by id_car",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by status",
                        "schema": {
                            "type": "enum",
                            "enum": [
                                "available",
                                "rented",
                                "unavailable"
                            ]
                        }
                    },
                    {
                        "name": "daily_value",
                        "in": "query",
                        "description": "Filter by daily_value",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "plate",
                        "in": "query",
                        "description": "Filter by plate",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Bad Request"
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Rental"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/rental/{rentalId}/fleet/{id}": {
            "parameters": [
                {
                    "name": "rentalId",
                    "in": "path",
                    "description": "Id of the Rental",
                    "required": true
                },
                {
                    "name": "id",
                    "in": "path",
                    "description": "Id of the Fleet",
                    "required": true
                }
            ],
            "get": {
                "summary": "Get Fleet by Id",
                "description": "This route will be responsible for listing a Fleet by Id",
                "tags": [
                    "Fleet"
                ],
                "responses": {
                    "404": {
                        "description": "Not Found"
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Fleet"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Update Fleet by Id",
                "description": "This route will be responsible for updating a Fleet by Id",
                "tags": [
                    "Fleet"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the Fleet",
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fleet"
                            }
                        }
                    }
                },
                "responses": {
                    "404": {
                        "description": "Not Found"
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Fleet"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete Fleet by Id",
                "description": "This route will be responsible for deleting a Fleet by Id",
                "tags": [
                    "Fleet"
                ],
                "responses": {
                    "404": {
                        "description": "Not Found"
                    },
                    "204": {
                        "description": "No Content",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Fleet"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/rental/{rentalId}/reserve": {
            "parameters": [
                {
                    "name": "rentalId",
                    "in": "path",
                    "description": "Id of the Rental",
                    "required": true
                }
            ],
            "post": {
                "summary": "Create Reserve",
                "description": "This route will be responsible for creating a Reserve",
                "tags": [
                    "Reserve"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Reserve"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Bad Request"
                    },
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "$ref": "#/components/schemas/Reserve"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "Get all Reserves",
                "description": "This route will be responsible for listing Reserves",
                "tags": [
                    "Reserve"
                ],
                "parameters": [
                    {
                        "name": "id_car",
                        "in": "query",
                        "description": "Filter by id_car",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id_rental",
                        "in": "query",
                        "description": "Filter by id_rental",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id_user",
                        "in": "query",
                        "description": "Filter by id_user",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "data_start",
                        "in": "query",
                        "description": "Filter by data_start",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "data_end",
                        "in": "query",
                        "description": "Filter by data_end",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "final_value",
                        "in": "query",
                        "description": "Filter by final_value",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Bad Request"
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Rental"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/rental/{rentalId}/reserve/{id}": {
            "parameters": [
                {
                    "name": "rentalId",
                    "in": "path",
                    "description": "Id of the Rental",
                    "required": true
                },
                {
                    "name": "id",
                    "in": "path",
                    "description": "Id of the Reserve",
                    "required": true
                }
            ],
            "get": {
                "summary": "Get Reserve by Id",
                "description": "This route will be responsible for listing a Reserve by Id",
                "tags": [
                    "Reserve"
                ],
                "responses": {
                    "404": {
                        "description": "Not Found"
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Reserve"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Update Reserve by Id",
                "description": "This route will be responsible for updating a Reserve by Id",
                "tags": [
                    "Reserve"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the Reserve",
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Reserve"
                            }
                        }
                    }
                },
                "responses": {
                    "404": {
                        "description": "Not Found"
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Reserve"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete Reserve by Id",
                "description": "This route will be responsible for deleting a Reserve by Id",
                "tags": [
                    "Reserve"
                ],
                "responses": {
                    "404": {
                        "description": "Not Found"
                    },
                    "204": {
                        "description": "No Content",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Reserve"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Car": {
                "type": "object",
                "properties": {
                    "model": {
                        "type": "string",
                        "example": "Gol"
                    },
                    "type": {
                        "type": "string",
                        "example": "SUV"
                    },
                    "brand": {
                        "type": "string",
                        "example": "Volkswagen"
                    },
                    "color": {
                        "type": "string",
                        "example": "Preto"
                    },
                    "year": {
                        "type": "string",
                        "example": "2020"
                    },
                    "accessories": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string",
                                    "example": "4 portas"
                                }
                            }
                        }
                    },
                    "passengersQtd": {
                        "type": "number",
                        "example": 5
                    }
                }
            },
            "Person": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Paulo Rayann"
                    },
                    "cpf": {
                        "type": "string",
                        "example": "077.199.870-80"
                    },
                    "birthday": {
                        "type": "string",
                        "format": "date",
                        "example": "09/05/2002"
                    },
                    "email": {
                        "type": "string",
                        "example": "paulorayann@email.com"
                    },
                    "password": {
                        "type": "string",
                        "example": "123456789"
                    },
                    "canDrive": {
                        "type": "string",
                        "enum": [
                            "yes",
                            "no"
                        ],
                        "example": "yes"
                    }
                }
            },
            "Rental": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Nome genérico"
                    },
                    "cnpj": {
                        "type": "string",
                        "example": "97.004.461/0001-74"
                    },
                    "activities": {
                        "type": "string",
                        "example": "Aluguel de Carros E Gestão de Frotas"
                    },
                    "address": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "cep": {
                                    "type": "string",
                                    "example": "66640-677"
                                },
                                "number": {
                                    "type": "string",
                                    "example": "18"
                                },
                                "isFilial": {
                                    "type": "boolean",
                                    "example": true
                                }
                            }
                        }
                    }
                }
            },
            "Fleet": {
                "type": "object",
                "properties": {
                    "id_car": {
                        "type": "string",
                        "example": "62b0ee3280525e741b204e56"
                    },
                    "status": {
                        "type": "enum",
                        "enum": [
                            "available",
                            "rented",
                            "unavailable"
                        ],
                        "example": "available"
                    },
                    "daily_value": {
                        "type": "number",
                        "example": 100
                    },
                    "plate": {
                        "type": "string",
                        "example": "ABC1234"
                    }
                }
            },
            "Reserve": {
                "type": "object",
                "properties": {
                    "id_user": {
                        "type": "string",
                        "example": "62b0c1e8265111e89201d550"
                    },
                    "data_start": {
                        "type": "string",
                        "format": "date",
                        "example": "01/05/2022"
                    },
                    "data_end": {
                        "type": "string",
                        "format": "date",
                        "example": "05/05/2022"
                    },
                    "id_car": {
                        "type": "string",
                        "example": "62b0ee3280525e741b204e56"
                    }
                }
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    }
}